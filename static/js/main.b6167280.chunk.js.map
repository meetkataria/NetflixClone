{"version":3,"sources":["Row.js","Banner.js","requests.js","App.js","reportWebVitals.js","index.js"],"names":["Row","title","url","React","useState","movies","setMovies","useEffect","a","fetch","res","json","resJson","results","fetchData","className","map","movie","poster_path","src","Banner","API_KEY","baseURL","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAiCeA,MA5Bf,YAA8B,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IACpB,EAA4BC,IAAMC,SAAS,IAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAH,IAAMI,WAAU,YACC,uCAAG,8BAAAC,EAAA,sEACEC,MAAMP,GADR,cACVQ,EADU,gBAEMA,EAAIC,OAFV,OAEVC,EAFU,OAGhBN,EAAUM,EAAQC,SAHF,2CAAH,qDAMfC,KACC,CAACZ,IAGF,sBAAKa,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,SAA0Bd,IAE1B,qBAAKc,UAAU,UAAf,SACGV,EAAOW,KAAI,SAACC,GACX,GAAIA,EAAMC,YACR,OAAO,qBAAKC,IAAG,UAtBX,uCAsBW,OAAeF,EAAMC,wBCnBjCE,ICNTC,EAAU,mCACVC,EAAU,+BAaDC,EAXE,CACfC,cAAc,GAAD,OAAKF,EAAL,sCAA0CD,EAA1C,mBACbI,sBAAsB,GAAD,OAAKH,EAAL,gCAAoCD,EAApC,sBACrBK,cAAc,GAAD,OAAKJ,EAAL,oCAAwCD,EAAxC,mBACbM,kBAAkB,GAAD,OAAKL,EAAL,mCAAuCD,EAAvC,mBACjBO,kBAAkB,GAAD,OAAKN,EAAL,mCAAuCD,EAAvC,mBACjBQ,kBAAkB,GAAD,OAAKP,EAAL,mCAAuCD,EAAvC,mBACjBS,mBAAmB,GAAD,OAAKR,EAAL,mCAAuCD,EAAvC,sBAClBU,mBAAmB,GAAD,OAAKT,EAAL,mCAAuCD,EAAvC,oBCWLW,MAhBf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAKd,MAAM,mBAAmBC,IAAKqB,EAASC,gBAC5C,cAAC,EAAD,CAAKvB,MAAM,oBAAoBC,IAAKqB,EAASE,wBAC7C,cAAC,EAAD,CAAKxB,MAAM,YAAYC,IAAKqB,EAASG,gBACrC,cAAC,EAAD,CAAKzB,MAAM,gBAAgBC,IAAKqB,EAASI,oBACzC,cAAC,EAAD,CAAK1B,MAAM,gBAAgBC,IAAKqB,EAASK,oBACzC,cAAC,EAAD,CAAK3B,MAAM,gBAAgBC,IAAKqB,EAASM,oBACzC,cAAC,EAAD,CAAK5B,MAAM,iBAAiBC,IAAKqB,EAASO,qBAC1C,cAAC,EAAD,CAAK7B,MAAM,gBAAgBC,IAAKqB,EAASQ,yBCLhCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6167280.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./row.css\";\r\n\r\nconst baseURL = \"https:/image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, url }) {\r\n  const [movies, setMovies] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(url);\r\n      const resJson = await res.json();\r\n      setMovies(resJson.results);\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className=\"category\">{title}</h2>\r\n\r\n      <div className=\"posters\">\r\n        {movies.map((movie) => {\r\n          if (movie.poster_path) {\r\n            return <img src={`${baseURL}${movie.poster_path}`}></img>;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\n\r\nfunction Banner() {\r\n  return <div></div>;\r\n}\r\n\r\nexport default Banner;\r\n","const API_KEY = \"5c6f8859dbdd57d1377aff7f2af7f3fa\";\r\nconst baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nconst requests = {\r\n  fetchTrending: `${baseURL}/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `${baseURL}/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `${baseURL}/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Netflix Clone</h1>\n      <Row title=\"Netflix Trending\" url={requests.fetchTrending} />\n      <Row title=\"Netflix Originals\" url={requests.fetchNetflixOriginals} />\n      <Row title=\"Top Rated\" url={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" url={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" url={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" url={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" url={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" url={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}